name: SonarQube Analysis

on:
  workflow_dispatch:
  pull_request:

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate code analysis

      - name: Install required tools
        run: |
          dotnet tool install -g dotnet-sonarscanner
          dotnet tool install -g dotnet-reportgenerator-globaltool
          dotnet tool install -g dotnet-stryker

      - name: Add tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Start Static Code Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"${{ secrets.SONARQUBE_PROJECT_KEY }}" \
            /d:sonar.host.url="${{ vars.SONARQUBE_HOST_URL }}" \
            /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}" \
            /d:sonar.coverageReportPaths="server/Startup/coverage-report/SonarQube.xml" \
            /d:sonar.coverage.sources=server/** \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.qualitygate.timeout=300 \
            /d:sonar.coverage.exclusions="client/**,**/Program.cs"

      - name: Build
        run: dotnet build
        working-directory: server/Startup

      - name: Run unit tests and collect coverage
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory ../../coverage-results
        working-directory: server/Startup.Tests

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports "../../coverage-results/**/coverage.cobertura.xml" \
            -targetdir "../Startup/coverage-report" \
            -reporttypes:HtmlInline;Cobertura \
            -reportfile:SonarQube.xml
        working-directory: server/Startup.Tests
      
      - name: Run mutation tests
        run: dotnet stryker --threshold-low 80 --output ../Startup/StrykerOutput
        working-directory: server/Startup.Tests

      - name: Collect Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: server/Startup/coverage-report

      - name: Collect Stryker Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stryker-report
          path: server/Startup/StrykerOutput

      - name: Complete Static Code Analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}"
